{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMnSczhsT+1Gg4xUt5/tJKv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**PROJECT 1**\n","\n","CALCULATOR"],"metadata":{"id":"cHT_MIoo__C-"}},{"cell_type":"code","source":["class Calculator:\n","  def add(self):\n","    return x+y\n","  def sub(self):\n","    return x-y\n","  def mul(self):\n","    return x*y\n","  def div(self):\n","    return x/y\n","  \n","x=int(input(\"Enter first value: \"))\n","y=int(input(\"Enter second value: \"))\n","\n","print(\"\"\"Choose option 1: Add\n","Choose option 2: Subtract\n","Choose option 3: Multiply\n","Choose option 4: Divide\"\"\")\n","\n","obj=Calculator()\n","\n","while True:\n","  choose=int(input(\"Choose 1/2/3/4: \"))\n","  if choose==1:\n","    print(\"Sum of\", x, \"&\", y, \"is: \", obj.add())\n","  elif choose==2:\n","    print(\"Difference of\", x, \"&\", y, \"is: \", obj.sub())\n","  elif choose==3:\n","    print(\"Multiple of\", x, \"&\", y, \"is: \", obj.mul())\n","  elif choose==4:\n","    print(\"Division of\", x, \"&\", y, \"is: \", obj.div())\n","  break_condition=input(\"Do you want to continue Yes/No: \")\n","  if break_condition==\"no\":\n","    break\n","    "],"metadata":{"id":"PRYWhGCvAN27"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 2**\n","\n","SENDING WHATSAPP MESSAGE\n"],"metadata":{"id":"ueazCJ14Gxo2"}},{"cell_type":"code","source":["!pip install pywhatkit\n","\n","import pywhatkit\n","\n","pywhatkit.sendwhatmsg(\"+918285242514\", \"Hello, We are learning Python\", 13,11)"],"metadata":{"id":"9pO6tEjIbWo_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 3**\n","\n","PLAYING YOUTUBE VIDEO\n"],"metadata":{"id":"_E6D8kYnbmAG"}},{"cell_type":"code","source":["!pip install pafy\n","\n","!pip install vlc\n","\n","import vlc\n","\n","import pafy\n","\n","url = \"https://www.youtube.com/watch?v=jEJgeIY9jww\"\n","\n","video = pafy.new(url)\n","\n","best = video.getbest()\n","\n","media = vlc.MediaPlayer(best.url)\n","\n","media.play()\n"],"metadata":{"id":"s3WWt7vydhB2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 4**\n","\n","DOWNLOADING YOUTUBE VIDEO"],"metadata":{"id":"kzrr4Al8efJO"}},{"cell_type":"code","source":["!pip install pytube\n","\n","from pytube import YouTube\n","\n","SAVE_PATH = \"E:/\"\n","\n","link=\"https://www.youtube.com/watch?v=jEJgeIY9jww\"\n","\n","try:\n","\tyt = YouTube(link)\n","except:\n","\tprint(\"Connection Error\")\n","\n","mp4files = yt.filter('mp4')\n","\n","yt.set_filename('Downloaded youtube video')\n","\n","d_video = yt.get(mp4files[-1].extension,mp4files[-1].resolution)\n","try:\n","\td_video.download(SAVE_PATH)\n","except:\n","\tprint(\"Some Error!\")\n","print('Task Completed!')\n"],"metadata":{"id":"OF_LpK4BfONG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 5**\n","\n","CREATING SNAKE GAME"],"metadata":{"id":"igUNCHByf9ne"}},{"cell_type":"code","source":["import turtle\n","import time\n","import random\n","\n","delay = 0.1\n","score = 0\n","high_score = 0\n","\n","wn = turtle.Screen()\n","wn.title(\"Snake Game\")\n","wn.bgcolor(\"blue\")\n","wn.setup(width=600, height=600)\n","wn.tracer(0)\n","\n","head = turtle.Turtle()\n","head.shape(\"square\")\n","head.color(\"white\")\n","head.penup()\n","head.goto(0, 0)\n","head.direction = \"Stop\"\n","\n","food = turtle.Turtle()\n","colors = random.choice(['red', 'green', 'black'])\n","shapes = random.choice(['square', 'triangle', 'circle'])\n","food.speed(0)\n","food.shape(shapes)\n","food.color(colors)\n","food.penup()\n","food.goto(0, 100)\n","\n","pen = turtle.Turtle()\n","pen.speed(0)\n","pen.shape(\"square\")\n","pen.color(\"white\")\n","pen.penup()\n","pen.hideturtle()\n","pen.goto(0, 250)\n","pen.write(\"Score : 0 High Score : 0\", align=\"center\",\n","\t\tfont=(\"candara\", 24, \"bold\"))\n","\n","def group():\n","\tif head.direction != \"down\":\n","\t\thead.direction = \"up\"\n","\n","\n","def godown():\n","\tif head.direction != \"up\":\n","\t\thead.direction = \"down\"\n","\n","\n","def goleft():\n","\tif head.direction != \"right\":\n","\t\thead.direction = \"left\"\n","\n","\n","def goright():\n","\tif head.direction != \"left\":\n","\t\thead.direction = \"right\"\n","\n","\n","def move():\n","\tif head.direction == \"up\":\n","\t\ty = head.ycor()\n","\t\thead.sety(y+20)\n","\tif head.direction == \"down\":\n","\t\ty = head.ycor()\n","\t\thead.sety(y-20)\n","\tif head.direction == \"left\":\n","\t\tx = head.xcor()\n","\t\thead.setx(x-20)\n","\tif head.direction == \"right\":\n","\t\tx = head.xcor()\n","\t\thead.setx(x+20)\n","\n","\n","wn.listen()\n","wn.onkeypress(group, \"w\")\n","wn.onkeypress(godown, \"s\")\n","wn.onkeypress(goleft, \"a\")\n","wn.onkeypress(goright, \"d\")\n","\n","segments = []\n","\n","while True:\n","\twn.update()\n","\tif head.xcor() > 290 or head.xcor() < -290 or head.ycor() > 290 or head.ycor() < -290:\n","\t\ttime.sleep(1)\n","\t\thead.goto(0, 0)\n","\t\thead.direction = \"Stop\"\n","\t\tcolors = random.choice(['red', 'blue', 'green'])\n","\t\tshapes = random.choice(['square', 'circle'])\n","\t\tfor segment in segments:\n","\t\t\tsegment.goto(1000, 1000)\n","\t\tsegments.clear()\n","\t\tscore = 0\n","\t\tdelay = 0.1\n","\t\tpen.clear()\n","\t\tpen.write(\"Score : {} High Score : {} \".format(\n","\t\t\tscore, high_score), align=\"center\", font=(\"candara\", 24, \"bold\"))\n","\tif head.distance(food) < 20:\n","\t\tx = random.randint(-270, 270)\n","\t\ty = random.randint(-270, 270)\n","\t\tfood.goto(x, y)\n","\n","\t\tnew_segment = turtle.Turtle()\n","\t\tnew_segment.speed(0)\n","\t\tnew_segment.shape(\"square\")\n","\t\tnew_segment.color(\"orange\") # tail colour\n","\t\tnew_segment.penup()\n","\t\tsegments.append(new_segment)\n","\t\tdelay -= 0.001\n","\t\tscore += 10\n","\t\tif score > high_score:\n","\t\t\thigh_score = score\n","\t\tpen.clear()\n","\t\tpen.write(\"Score : {} High Score : {} \".format(\n","\t\t\tscore, high_score), align=\"center\", font=(\"candara\", 24, \"bold\"))\n","\n","\tfor index in range(len(segments)-1, 0, -1):\n","\t\tx = segments[index-1].xcor()\n","\t\ty = segments[index-1].ycor()\n","\t\tsegments[index].goto(x, y)\n","\tif len(segments) > 0:\n","\t\tx = head.xcor()\n","\t\ty = head.ycor()\n","\t\tsegments[0].goto(x, y)\n","\tmove()\n","\tfor segment in segments:\n","\t\tif segment.distance(head) < 20:\n","\t\t\ttime.sleep(1)\n","\t\t\thead.goto(0, 0)\n","\t\t\thead.direction = \"stop\"\n","\t\t\tcolors = random.choice(['red', 'blue', 'green'])\n","\t\t\tshapes = random.choice(['square', 'circle'])\n","\t\t\tfor segment in segments:\n","\t\t\t\tsegment.goto(1000, 1000)\n","\t\t\tsegment.clear()\n","\n","\t\t\tscore = 0\n","\t\t\tdelay = 0.1\n","\t\t\tpen.clear()\n","\t\t\tpen.write(\"Score : {} High Score : {} \".format(\n","\t\t\t\tscore, high_score), align=\"center\", font=(\"candara\", 24, \"bold\"))\n","\ttime.sleep(delay)\n","\n","wn.mainloop()"],"metadata":{"id":"J7Qxhc8P9h1O"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 6**\n","\n","GENERATING QR CODE"],"metadata":{"id":"DCnIlu94gOQC"}},{"cell_type":"code","source":["!pip install qrcode\n","\n","import qrcode\n","\n","img=qrcode.make(\"https://www.youtube.com/watch?v=jEJgeIY9jww&t=64s\")\n","\n","img.save(\"myqrcode.png\")\n","\n","img.show()"],"metadata":{"id":"rNanmc_9grMc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 7**\n","\n","SENDING E-MAIL"],"metadata":{"id":"eZ6YNOB5gUwA"}},{"cell_type":"code","source":["!pip install smtplib\n","\n","import smtplib\n","\n","sender=\"ayesha12dec2000@gmail.com\"\n","receivers=[\"ayesha12dec2000@gmail.com\"]\n","\n","message=\"\"\"From: from person <ayesha12dec2000@gmail.com>\n","To: To person <ayesha12dec2000@gmail.com>\n","Subject: SMTP e-mail test\n","\n","This is a test e-mail message.\n","\"\"\"\n","\n","try:\n","  smtpObj=smtplib.SMTP(\"local host\")\n","  smtpObj.sendmail(sender,receivers,message)\n","  print(\"Successfully send e-mail\")\n","except SMTPException:\n","  print(\"Error: unable to send e-mail\")"],"metadata":{"id":"psOR6Tgfok0I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 8**\n","\n","ROCK PAPER SCISSOR GAME"],"metadata":{"id":"v4baiXEtgYUY"}},{"cell_type":"code","source":["import random\n","\n","print(\" ---------------------\")\n","print(\"| Rock Paper Scissors |\")\n","print(\" ---------------------\")\n","\n","listCh = [\"R\", \"P\", \"S\"]\n","\n","userScore = 0\n","computerScore = 0\n","i = 1\n","\n","chance = int(input(\"How many time you want to play (no. of chances): \"))\n","\n","while i <= chance:\n","    computerCh = str(random.choice(listCh))\n","\n","    userCh = input(\"Enter Rock, Paper, Scissors (key to press: R,P,S): \").upper()\n","    if userCh == computerCh:\n","        print(\"Tie You Both Entered Same\")\n","\n","    elif userCh == \"R\":\n","        print(\"Computer Enter: \", computerCh)\n","        if computerCh == \"P\":\n","            print(\"ðŸ‘‰ You lose! Paper covers Rock\")\n","            computerScore += 1\n","        else:\n","            print(\"ðŸ‘‰ You win! Rock smashes Scissors\")\n","            userScore += 1\n","    elif userCh == \"P\":\n","        print(\"Computer Enter: \", computerCh)\n","        if computerCh == \"S\":\n","            print(\"ðŸ‘‰ You lose! Scissor cut Paper\")\n","            computerScore += 1\n","        else:\n","            print(\"ðŸ‘‰ You win! Paper covers Rock\")\n","            userScore += 1\n","\n","    elif userCh == \"S\":\n","        print(\"Computer Enter: \", computerCh)\n","        if computerCh == \"R\":\n","            print(\"ðŸ‘‰ You lose! Rock smashes Scissors\")\n","            computerScore += 1\n","        else:\n","            print(\"ðŸ‘‰ You win! Scissor cut Paper\")\n","            userScore += 1\n","    else:\n","        print(\":(\")\n","\n","    print(\"\\n\\t******ScoreBoard******\")\n","    print(f\"\\t You: {userScore} | Computer: {computerScore}\")\n","    print(\"\\t**********************\")\n","    print(f\"Game No:[{i}]\")\n","    print(\"========================================================\")\n","\n","    i += 1\n","\n","print(\"\\n\\n##### Game Over #####\")\n","print(\"*******************************************\")\n","if userScore < computerScore:\n","    print(\n","        \"ðŸ˜­ Sorry You lose the game ðŸ˜­\\n computer win the game with score:\", computerScore\n","    )\n","elif userScore == computerScore:\n","    print(\"ðŸ˜… Game is Tie Play Again ðŸ˜…\")\n","else:\n","    print(\"ðŸ˜„ You Win the Game with score:\", userScore, \"ðŸ˜„\")"],"metadata":{"id":"tF3OW-F3iDdA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 9**\n","\n","SPEECH RECOGNITION"],"metadata":{"id":"0lZjlFSYgbxm"}},{"cell_type":"code","source":["!pip install speechrecognition\n","\n","!pip install pyttsx3\n","\n","import speech_recognition as sr\n","import pyttsx3\n","\n","r = sr.Recognizer()\n","\n","def SpeakText(command):\n","\tengine = pyttsx3.init()\n","\tengine.say(command)\n","\tengine.runAndWait()\n","while(1):\n","\ttry:\n","\t\twith sr.Microphone() as source2:\n","\t\t\tr.adjust_for_ambient_noise(source2, duration=0.2)\n","\t\t\taudio2 = r.listen(source2)\n","\t\t\tMyText = r.recognize_google(audio2)\n","\t\t\tMyText = MyText.lower()\n","\n","\t\t\tprint(\"Did you say \",MyText)\n","\t\t\tSpeakText(MyText)\n","\t\t\t\n","\texcept sr.RequestError as e:\n","\t\tprint(\"Could not request results; {0}\".format(e))\n","\t\t\n","\texcept sr.UnknownValueError:\n","\t\tprint(\"unknown error occurred\")"],"metadata":{"id":"s5uF5NFP4c8r"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**PROJECT 10**\n","\n","CONVERT TEXT INTO SPEECH"],"metadata":{"id":"lyLgcwI-giSV"}},{"cell_type":"code","source":["!pip install gTTS\n","\n","from gtts import gTTS\n","\n","import os\n","\n","mytext = 'We are learning python!'\n","language = 'en'\n","\n","myobj = gTTS(text=mytext, lang=language, slow=False)\n","\n","myobj.save(\"python.mp3\")\n","os.system(\"mpg321 python.mp3\")"],"metadata":{"id":"6oLCIYIP0PjU"},"execution_count":null,"outputs":[]}]}